/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as VerifyEmailTokenImport } from './routes/verify-email.$token'
import { Route as PublicAuthIndexImport } from './routes/_public/auth/index'
import { Route as ProtectedSelectWorkspaceIndexImport } from './routes/_protected/select-workspace/index'
import { Route as PublicAuthLayoutImport } from './routes/_public/auth/_layout'
import { Route as ProtectedWorkspacesWorkspaceIdImport } from './routes/_protected/workspaces/$workspaceId'
import { Route as ProtectedWorkspacesWorkspaceIdIndexImport } from './routes/_protected/workspaces/$workspaceId.index'
import { Route as PublicAuthLayoutRegisterImport } from './routes/_public/auth/_layout.register'
import { Route as PublicAuthLayoutLoginImport } from './routes/_public/auth/_layout.login'
import { Route as ProtectedWorkspacesWorkspaceIdSettingsImport } from './routes/_protected/workspaces/$workspaceId.settings'
import { Route as ProtectedWorkspacesWorkspaceIdActivityImport } from './routes/_protected/workspaces/$workspaceId.activity'
import { Route as ProtectedWorkspacesWorkspaceIdSettingsIndexImport } from './routes/_protected/workspaces/$workspaceId.settings.index'
import { Route as ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsImport } from './routes/_protected/workspaces/$workspaceId.settings.workspace-settings'

// Create Virtual Routes

const PublicAuthImport = createFileRoute('/_public/auth')()

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const PublicAuthRoute = PublicAuthImport.update({
  path: '/auth',
  getParentRoute: () => PublicRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const VerifyEmailTokenRoute = VerifyEmailTokenImport.update({
  path: '/verify-email/$token',
  getParentRoute: () => rootRoute,
} as any)

const PublicAuthIndexRoute = PublicAuthIndexImport.update({
  path: '/',
  getParentRoute: () => PublicAuthRoute,
} as any)

const ProtectedSelectWorkspaceIndexRoute =
  ProtectedSelectWorkspaceIndexImport.update({
    path: '/select-workspace/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const PublicAuthLayoutRoute = PublicAuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => PublicAuthRoute,
} as any)

const ProtectedWorkspacesWorkspaceIdRoute =
  ProtectedWorkspacesWorkspaceIdImport.update({
    path: '/workspaces/$workspaceId',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdIndexRoute =
  ProtectedWorkspacesWorkspaceIdIndexImport.update({
    path: '/',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdRoute,
  } as any)

const PublicAuthLayoutRegisterRoute = PublicAuthLayoutRegisterImport.update({
  path: '/register',
  getParentRoute: () => PublicAuthLayoutRoute,
} as any)

const PublicAuthLayoutLoginRoute = PublicAuthLayoutLoginImport.update({
  path: '/login',
  getParentRoute: () => PublicAuthLayoutRoute,
} as any)

const ProtectedWorkspacesWorkspaceIdSettingsRoute =
  ProtectedWorkspacesWorkspaceIdSettingsImport.update({
    path: '/settings',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdActivityRoute =
  ProtectedWorkspacesWorkspaceIdActivityImport.update({
    path: '/activity',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdSettingsIndexRoute =
  ProtectedWorkspacesWorkspaceIdSettingsIndexImport.update({
    path: '/',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdSettingsRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsRoute =
  ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsImport.update({
    path: '/workspace-settings',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdSettingsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/verify-email/$token': {
      preLoaderRoute: typeof VerifyEmailTokenImport
      parentRoute: typeof rootRoute
    }
    '/_public/': {
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/_protected/workspaces/$workspaceId': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdImport
      parentRoute: typeof ProtectedImport
    }
    '/_public/auth': {
      preLoaderRoute: typeof PublicAuthImport
      parentRoute: typeof PublicImport
    }
    '/_public/auth/_layout': {
      preLoaderRoute: typeof PublicAuthLayoutImport
      parentRoute: typeof PublicAuthRoute
    }
    '/_protected/select-workspace/': {
      preLoaderRoute: typeof ProtectedSelectWorkspaceIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_public/auth/': {
      preLoaderRoute: typeof PublicAuthIndexImport
      parentRoute: typeof PublicAuthImport
    }
    '/_protected/workspaces/$workspaceId/activity': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdActivityImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdImport
    }
    '/_protected/workspaces/$workspaceId/settings': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdImport
    }
    '/_public/auth/_layout/login': {
      preLoaderRoute: typeof PublicAuthLayoutLoginImport
      parentRoute: typeof PublicAuthLayoutImport
    }
    '/_public/auth/_layout/register': {
      preLoaderRoute: typeof PublicAuthLayoutRegisterImport
      parentRoute: typeof PublicAuthLayoutImport
    }
    '/_protected/workspaces/$workspaceId/': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdIndexImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdImport
    }
    '/_protected/workspaces/$workspaceId/settings/workspace-settings': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsImport
    }
    '/_protected/workspaces/$workspaceId/settings/': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsIndexImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  ProtectedRoute.addChildren([
    ProtectedWorkspacesWorkspaceIdRoute.addChildren([
      ProtectedWorkspacesWorkspaceIdActivityRoute,
      ProtectedWorkspacesWorkspaceIdSettingsRoute.addChildren([
        ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsRoute,
        ProtectedWorkspacesWorkspaceIdSettingsIndexRoute,
      ]),
      ProtectedWorkspacesWorkspaceIdIndexRoute,
    ]),
    ProtectedSelectWorkspaceIndexRoute,
  ]),
  PublicRoute.addChildren([
    PublicIndexRoute,
    PublicAuthRoute.addChildren([
      PublicAuthLayoutRoute.addChildren([
        PublicAuthLayoutLoginRoute,
        PublicAuthLayoutRegisterRoute,
      ]),
      PublicAuthIndexRoute,
    ]),
  ]),
  VerifyEmailTokenRoute,
])

/* prettier-ignore-end */
