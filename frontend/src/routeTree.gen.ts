/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as IndexImport } from './routes/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as VerifyEmailTokenImport } from './routes/verify-email.$token'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as ProtectedSelectWorkspaceIndexImport } from './routes/_protected/select-workspace/index'
import { Route as AuthLayoutRegisterImport } from './routes/auth/_layout.register'
import { Route as AuthLayoutLoginImport } from './routes/auth/_layout.login'
import { Route as ProtectedWorkspacesWorkspaceIdImport } from './routes/_protected/workspaces/$workspaceId'
import { Route as ProtectedWorkspacesWorkspaceIdIndexImport } from './routes/_protected/workspaces/$workspaceId.index'
import { Route as ProtectedWorkspacesWorkspaceIdSettingsImport } from './routes/_protected/workspaces/$workspaceId.settings'
import { Route as ProtectedWorkspacesWorkspaceIdActivityImport } from './routes/_protected/workspaces/$workspaceId.activity'
import { Route as ProtectedWorkspacesWorkspaceIdSettingsIndexImport } from './routes/_protected/workspaces/$workspaceId.settings.index'
import { Route as ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsImport } from './routes/_protected/workspaces/$workspaceId.settings.workspace-settings'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const VerifyEmailTokenRoute = VerifyEmailTokenImport.update({
  path: '/verify-email/$token',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const ProtectedSelectWorkspaceIndexRoute =
  ProtectedSelectWorkspaceIndexImport.update({
    path: '/select-workspace/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const AuthLayoutRegisterRoute = AuthLayoutRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const ProtectedWorkspacesWorkspaceIdRoute =
  ProtectedWorkspacesWorkspaceIdImport.update({
    path: '/workspaces/$workspaceId',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdIndexRoute =
  ProtectedWorkspacesWorkspaceIdIndexImport.update({
    path: '/',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdSettingsRoute =
  ProtectedWorkspacesWorkspaceIdSettingsImport.update({
    path: '/settings',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdActivityRoute =
  ProtectedWorkspacesWorkspaceIdActivityImport.update({
    path: '/activity',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdSettingsIndexRoute =
  ProtectedWorkspacesWorkspaceIdSettingsIndexImport.update({
    path: '/',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdSettingsRoute,
  } as any)

const ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsRoute =
  ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsImport.update({
    path: '/workspace-settings',
    getParentRoute: () => ProtectedWorkspacesWorkspaceIdSettingsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/verify-email/$token': {
      preLoaderRoute: typeof VerifyEmailTokenImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_protected/workspaces/$workspaceId': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdImport
      parentRoute: typeof ProtectedImport
    }
    '/auth/_layout/login': {
      preLoaderRoute: typeof AuthLayoutLoginImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/_layout/register': {
      preLoaderRoute: typeof AuthLayoutRegisterImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_protected/select-workspace/': {
      preLoaderRoute: typeof ProtectedSelectWorkspaceIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/workspaces/$workspaceId/activity': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdActivityImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdImport
    }
    '/_protected/workspaces/$workspaceId/settings': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdImport
    }
    '/_protected/workspaces/$workspaceId/': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdIndexImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdImport
    }
    '/_protected/workspaces/$workspaceId/settings/workspace-settings': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsImport
    }
    '/_protected/workspaces/$workspaceId/settings/': {
      preLoaderRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsIndexImport
      parentRoute: typeof ProtectedWorkspacesWorkspaceIdSettingsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ProtectedRoute.addChildren([
    ProtectedWorkspacesWorkspaceIdRoute.addChildren([
      ProtectedWorkspacesWorkspaceIdActivityRoute,
      ProtectedWorkspacesWorkspaceIdSettingsRoute.addChildren([
        ProtectedWorkspacesWorkspaceIdSettingsWorkspaceSettingsRoute,
        ProtectedWorkspacesWorkspaceIdSettingsIndexRoute,
      ]),
      ProtectedWorkspacesWorkspaceIdIndexRoute,
    ]),
    ProtectedSelectWorkspaceIndexRoute,
  ]),
  AuthRoute.addChildren([
    AuthLayoutRoute.addChildren([
      AuthLayoutLoginRoute,
      AuthLayoutRegisterRoute,
    ]),
    AuthIndexRoute,
  ]),
  VerifyEmailTokenRoute,
])

/* prettier-ignore-end */
