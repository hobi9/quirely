name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install CDK
        run: npm install -g aws-cdk@2.1020.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-south-1

      - name: Install CDK dependencies
        working-directory: ./cdk-infra
        run: npm install

      - name: Bootstrap CDK
        working-directory: ./cdk-infra
        run: cdk bootstrap

      - name: Fetch CloudFront IP Ranges (GLOBAL only, limited to 30)
        id: cloudfront-ips
        run: |
          ips=$(curl -s https://ip-ranges.amazonaws.com/ip-ranges.json | jq -r '.prefixes[] | select(.service=="CLOUDFRONT" and .region=="GLOBAL") | .ip_prefix' | head -n 30 | tr '\n' ',' | sed 's/,$//')
          echo "ips=$ips" >> $GITHUB_OUTPUT

      - name: Deploy CDK stack
        working-directory: ./cdk-infra
        run: |
          cdk deploy CdkInfraStack --require-approval never \
            --parameters cloudFrontIpRanges="${{ steps.cloudfront-ips.outputs.ips }}" \
            --parameters stageName=prod \
            --parameters sesEmail='${{ secrets.SES_EMAIL }}' \
            --outputs-file cdk-outputs.json

      - name: Get CDK Outputs
        id: cdk-outputs
        run: |
          echo "FRONTEND_BUCKET=$(cat cdk-infra/cdk-outputs.json | jq -r '.CdkInfraStack.FrontendBucketName')" >> $GITHUB_ENV
          echo "ARTIFACTS_BUCKET=$(cat cdk-infra/cdk-outputs.json | jq -r '.CdkInfraStack.ArtifactsBucketName')" >> $GITHUB_ENV
          echo "BEANSTALK_APP=$(cat cdk-infra/cdk-outputs.json | jq -r '.CdkInfraStack.BeanstalkApplicationName')" >> $GITHUB_ENV
          echo "BEANSTALK_ENV=$(cat cdk-infra/cdk-outputs.json | jq -r '.CdkInfraStack.BeanstalkEnvironmentName')" >> $GITHUB_ENV
          echo "DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name CdkInfraStack --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDomain'].OutputValue" --output text | cut -d'.' -f1)" >> $GITHUB_ENV

      - name: Set CLIENT_BASE_URL in Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ env.BEANSTALK_ENV }} \
            --option-settings Namespace=aws:elasticbeanstalk:application:environment,Name=CLIENT_BASE_URL,Value=https://${{ env.CLOUDFRONT_DOMAIN }}

      - name: Build React frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Upload frontend to S3
        working-directory: ./frontend
        run: aws s3 sync ./dist/ s3://${{ env.FRONTEND_BUCKET }}/ --delete

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/*"

      - name: Package Spring Boot app
        working-directory: ./backend
        run: |
          ./mvnw package
          zip -r application.zip target/*.jar .ebextensions/

      - name: Deploy to Elastic Beanstalk
        working-directory: ./backend
        run: |
          aws s3 cp application.zip s3://${{ env.ARTIFACTS_BUCKET }}/application.zip
          aws elasticbeanstalk create-application-version --application-name ${{ env.BEANSTALK_APP }} --version-label ${{ github.sha }} --source-bundle S3Bucket=${{ env.ARTIFACTS_BUCKET }},S3Key=application.zip
          aws elasticbeanstalk update-environment --environment-name ${{ env.BEANSTALK_ENV }} --version-label ${{ github.sha }}

env:
  AWS_REGION: eu-central-1
